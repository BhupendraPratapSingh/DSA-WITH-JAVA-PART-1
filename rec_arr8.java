/* Given  a string , WAM(write a method) to return all its subsequences in an arraylist.A string
  is s a subsequence of a given  String that is generated by deleting some character
  of a given string without changing its order.

  Input: abc.
  Output: a ,  b , ab ,  bc , ac , abc , c , " "
  Note: Empty String mein teeno ko delete kr diya.
  If n=3
  then Total Subsequence = 2^n.

  -> Big Problelm = f(abc)
  -> Subproblem/SmallAns = f(bc) -> f(c) 
  -> Self Work = f(abc) = f(bc)
  -> f(bc) = bc , b, c ,""
  -> aur agar hum sare mein  a prefix add krde then remaining bhi mil jayega.
  -> f(bc) = abc , ab ,ac , a // so dono ko combine krke humein complete anwere mil jayega. 

  so -> f("abc") = a + f(bc) //appending a in f(bc)
     -> and now directly print f("bc")
     
      
         
 */
import java.util.ArrayList;
import java.util.Scanner;
public class rec_arr8
{
    static ArrayList<String> getSSQ(String s )
    {
        ArrayList<String> ans = new ArrayList<>();

        //base case
        if(s.length()==0)
        {
            ans.add("");
            return ans;
        }

        char curr = s.charAt(0); // a 
        //Recursive Work
        ArrayList<String> smallAns = getSSQ(s.substring(1)); //bc
     // ["bc" , "b" , "c" , ""]

      //smallAns = [bc , b , c , ""]
     // ans = [bc , b , c , "" , abc , ab , ac , a]
     for(String ss: smallAns)
     {
           ans.add(ss); //bc
           ans.add(curr + ss); //abc
     }
     return ans;

    }
    
    public static void main(String[] args) {
        ArrayList<String> ans = getSSQ("abc");
        for(String ss: ans)
        {
            System.out.println(ss);
        }
    }
}